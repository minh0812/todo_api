{"version":3,"sources":["contexts/ThemeContext.js","components/Navbar.js","components/ThemeToggle.js","components/TodoItem.js","components/TodoForm.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","children","useState","isLightTheme","light","background","color","dark","theme","setTheme","themeContextData","toggleTheme","Provider","value","Navbar","useContext","styles","className","style","ThemeToggle","onClick","TodoItem","props","check_styles","todo","status","textDecoration","checkTodo","id","title","deleteTodo","TodoForm","setTitle","onSubmit","event","preventDefault","addTodo","v4","slice","type","name","placeholder","onChange","target","required","Todos","todos","setTodos","useEffect","a","axios","result","data","fetchData","post","find","element","put","delete","filter","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77bd51ca.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = ({children}) => {\r\n  // State\r\n  const [theme, setTheme] = useState({\r\n    isLightTheme: true,\r\n    light: {\r\n      background: \"rgb(240, 240, 240)\",\r\n      color: \"black\",\r\n    },\r\n    dark: {\r\n      background: \"rgb(39, 39, 39)\",\r\n      color: \"white\",\r\n    },\r\n  });\r\n\r\n  //function to toggle theme\r\n  const toggleTheme = () => {\r\n      setTheme({\r\n          ...theme,\r\n          isLightTheme: !theme.isLightTheme\r\n      })\r\n  }\r\n\r\n  //Context data\r\n  const themeContextData = {\r\n    theme,\r\n    toggleTheme,\r\n  };\r\n\r\n  //Return provider\r\n  return (\r\n    <ThemeContext.Provider value={themeContextData}>\r\n        {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\n\r\nexport default function Navbar() {\r\n  const {theme} = useContext(ThemeContext);\r\n  const { isLightTheme, light, dark } = theme;\r\n  const styles = isLightTheme ? light : dark;\r\n  return (\r\n    <div className=\"navbar\" style={styles}>\r\n      <h1>My todo list</h1>\r\n      <ul>\r\n        <li>Home</li>\r\n        <li>About</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\n\r\nexport default function ThemeToggle() {\r\n  const { toggleTheme } = useContext(ThemeContext);\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, light, dark } = theme;\r\n  const styles = isLightTheme ? light : dark;\r\n  return (\r\n    <div className=\"toggle-btn\" onClick={toggleTheme} >\r\n      <button style={styles}>{isLightTheme === true ? 'Dark mode' : 'Light mode'}</button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\n\r\nexport default function TodoItem(props) {\r\n  //style\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, light, dark } = theme;\r\n  const styles = isLightTheme ? light : dark;\r\n  const check = {\r\n    textDecoration: \"line-through\",\r\n  };\r\n  const not_check = {\r\n    textDecoration: \"none\",\r\n  };\r\n  const check_styles = props.todo.status === \"check\" ? check : not_check;\r\n\r\n  return (\r\n    <div style={styles}>\r\n      <li\r\n        style={check_styles}\r\n        onClick={() => {\r\n          props.checkTodo(props.todo.id);\r\n        }}\r\n      >\r\n        {props.todo.title}\r\n        <i\r\n          className=\"bi bi-trash\"\r\n          onClick={() => props.deleteTodo(props.todo.id)}\r\n        ></i>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\n\r\nexport default function TodoForm(props) {\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.addTodo({\r\n      id: v4().slice(1, 4),\r\n      title: title,\r\n      status: \"not check\",\r\n    });\r\n    setTitle(\"\");\r\n  };\r\n\r\n  //style\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLightTheme, light, dark } = theme;\r\n  const styles = isLightTheme ? light : dark;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"Enter a new todo...\"\r\n        onChange={onTitleChange}\r\n        value={title}\r\n        required\r\n        style={styles}\r\n      />\r\n      <input type=\"submit\" value=\"Add\" style={styles} />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport axios from \"axios\";\r\n// import useFetch from \"react-fetch-hook\";\r\n\r\nexport default function Todos() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios('https://mysterious-basin-95318.herokuapp.com/todo');\r\n      setTodos(result.data.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addTodo = async (todo) => {\r\n    await axios.post('https://mysterious-basin-95318.herokuapp.com/todo', todo);\r\n    setTodos([todo, ...todos]);\r\n  };\r\n\r\n  const checkTodo = async (id) => {\r\n    //lấy ra todo item cần thay đổi trạng thái. Thằng todo tạo mới có địa chỉ ô nhớ nằm trong arry todos nên nó sẽ thay đổi trạng thái của todos\r\n    let todo = todos.find((element) => element.id === id);\r\n    todo.status = todo.status === \"check\" ? \"not check\" : \"check\";\r\n\r\n    axios.put(`https://mysterious-basin-95318.herokuapp.com/todo/${id}`, todo);\r\n\r\n    setTodos([...todos]);\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    await axios.delete(`https://mysterious-basin-95318.herokuapp.com/todo/${id}`);\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <TodoForm addTodo={addTodo} />\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <TodoItem\r\n            todo={todo}\r\n            key={todo.id}\r\n            checkTodo={checkTodo}\r\n            deleteTodo={deleteTodo}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import Navbar from \"./components/Navbar\";\r\nimport ThemeToggle from \"./components/ThemeToggle\";\r\nimport Todos from \"./components/Todos\";\r\nimport ThemeContextProvider from \"./contexts/ThemeContext\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeContextProvider>\r\n        <Navbar />\r\n        <Todos />\r\n        <ThemeToggle />\r\n      </ThemeContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}